.poem-container{ "data-poem-id" => "#{@poem.id}" }
  .poem-title.poem-topbot
    .fav-poem
      - if @user_fav
        %span.glyphicon.glyphicon-heart.is-fav
      - else
        %span.glyphicon.glyphicon-heart-empty
    %h1.poem-major-bar #{@poem.title}
    %h3.poem-minor-bar by #{@poem.author}
    .poem-tags
      %ul#poem-tag-list
        - @poem.try(:tags).each do |tag|
          = link_to tag_path(tag.name), class: "tag-link" do
            %li.mini-tag
              %p #{tag.name}
  .poem-body
    %pre #{@poem.body}
  .poem-topbot#new-reading-container
    %button.btn.btn-success#toggle-recording Start
    #new-reading-inner
      %h3.poem-major-bar.full-width
        - if current_user.present?
          Read this poem! ("Allow" on prompt)
        - else
          #{link_to "Sign in", new_user_session_path} to record.
      %input#recording-desc.poem-input.minor-input.hidden{ type: "text", placeholder: "Click to enter a description"}/
      %button.btn.btn-warning.hidden#save-recording Save!
.readings-container
  %ul#reading-list

-# Immediately request JSON for the relevant readings and render them with hbs
%script
  Playetry.audioControl.getReadings("#{@poem.id}")
